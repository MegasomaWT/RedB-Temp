using redb.Core.Query;
using System.Collections.Generic;
using System.Threading.Tasks;
using redb.Core.Models.Contracts;

namespace redb.Core.Providers
{
    /// <summary>
    /// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è LINQ-–∑–∞–ø—Ä–æ—Å–æ–≤ (–≤—ã—Å–æ–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π API)
    /// </summary>
    public interface IQueryableProvider
    {
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Å—Ö–µ–º—É –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞)
        /// </summary>
        Task<IRedbQueryable<TProps>> QueryAsync<TProps>() where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        /// </summary>
        Task<IRedbQueryable<TProps>> QueryAsync<TProps>(IRedbUser user) where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// </summary>
        IRedbQueryable<TProps> Query<TProps>() where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// </summary>
        IRedbQueryable<TProps> Query<TProps>(IRedbUser user) where TProps : class, new();
        
        // ===== –î–†–ï–í–û–í–ò–î–ù–´–ï LINQ-–ó–ê–ü–†–û–°–´ =====
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Å—Ö–µ–º—É –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞)
        /// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: WhereHasAncestor, WhereHasDescendant, WhereLevel, WhereRoots, WhereLeaves
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>() where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        /// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: WhereHasAncestor, WhereHasDescendant, WhereLevel, WhereRoots, WhereLeaves
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>(IRedbUser user) where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: WhereHasAncestor, WhereHasDescendant, WhereLevel, WhereRoots, WhereLeaves
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>() where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ç–∏–ø—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: WhereHasAncestor, WhereHasDescendant, WhereLevel, WhereRoots, WhereLeaves
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>(IRedbUser user) where TProps : class, new();
        
        // ===== –î–†–ï–í–û–í–ò–î–ù–´–ï LINQ –° –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï–ú –ü–û–î–î–ï–†–ï–í–ê =====
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–ø–æ ID)
        /// –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å—Ä–µ–¥–∏ –ø–æ—Ç–æ–º–∫–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ rootObjectId
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>(long rootObjectId, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        /// –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å—Ä–µ–¥–∏ –ø–æ—Ç–æ–º–∫–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ rootObject
        /// –ï—Å–ª–∏ rootObject = null, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞)
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>(IRedbObject? rootObject, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤—å—è–º–∏ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤  
        /// –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Å—Ä–µ–¥–∏ –ø–æ—Ç–æ–º–∫–æ–≤ –õ–Æ–ë–û–ì–û –∏–∑ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö rootObjects
        /// –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞)
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>(IEnumerable<IRedbObject> rootObjects, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–ø–æ ID)
        /// –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å—Ä–µ–¥–∏ –ø–æ—Ç–æ–º–∫–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ rootObjectId
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>(long rootObjectId, IRedbUser user, int? maxDepth = null) where TProps : class, new();
        
        // ===== –î–†–ï–í–û–í–ò–î–ù–´–ï LINQ –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò –ò –†–ê–°–®–ò–†–ï–ù–ù–´–ú–ò –í–û–ó–ú–û–ñ–ù–û–°–¢–Ø–ú–ò =====
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        /// –ï—Å–ª–∏ rootObject = null, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞) 
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>(IRedbObject? rootObject, IRedbUser user, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤—å—è–º–∏ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        /// –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞)
        /// </summary>
        Task<ITreeQueryable<TProps>> TreeQueryAsync<TProps>(IEnumerable<IRedbObject> rootObjects, IRedbUser user, int? maxDepth = null) where TProps : class, new();
        
        // ===== –°–ò–ù–•–†–û–ù–ù–´–ï –í–ï–†–°–ò–ò =====
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –ø–æ ID)
        /// –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å—Ä–µ–¥–∏ –ø–æ—Ç–æ–º–∫–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ rootObjectId
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>(long rootObjectId, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// –ï—Å–ª–∏ rootObject = null, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞)
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>(IRedbObject? rootObject, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤—å—è–º–∏ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞)
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>(IEnumerable<IRedbObject> rootObjects, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –ø–æ ID)
        /// –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å—Ä–µ–¥–∏ –ø–æ—Ç–æ–º–∫–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ rootObjectId
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>(long rootObjectId, IRedbUser user, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// –ï—Å–ª–∏ rootObject = null, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞)
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>(IRedbObject? rootObject, IRedbUser user, int? maxDepth = null) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ó–ê–ö–ê–ó–ß–ò–ö: –°–æ–∑–¥–∞—Ç—å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–¥–¥–µ—Ä–µ–≤—å—è–º–∏ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
        /// –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π queryable (—É–¥–æ–±–Ω–µ–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –∫–æ–¥–∞)
        /// </summary>
        ITreeQueryable<TProps> TreeQuery<TProps>(IEnumerable<IRedbObject> rootObjects, IRedbUser user, int? maxDepth = null) where TProps : class, new();
    }
}
