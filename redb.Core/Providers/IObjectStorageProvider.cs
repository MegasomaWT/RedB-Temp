using redb.Core.Models.Entities;
using redb.Core.Models.Contracts;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace redb.Core.Providers
{
    /// <summary>
    /// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º/–∑–∞–≥—Ä—É–∑–∫–æ–π –æ–±—ä–µ–∫—Ç–æ–≤ –≤ EAV
    /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    /// </summary>
    public interface IObjectStorageProvider
    {
        // ===== –ë–ê–ó–û–í–´–ï –ú–ï–¢–û–î–´ (–∏—Å–ø–æ–ª—å–∑—É—é—Ç _securityContext –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é) =====
        
        /// <summary>
        /// –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ EAV –ø–æ ID (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç _securityContext –∏ config.DefaultCheckPermissionsOnLoad)
        /// </summary>
        Task<RedbObject<TProps>> LoadAsync<TProps>(long objectId, int depth = 10) where TProps : class, new();
        
        /// <summary>
        /// –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ EAV (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç _securityContext –∏ config.DefaultCheckPermissionsOnLoad)
        /// </summary>
        Task<RedbObject<TProps>> LoadAsync<TProps>(IRedbObject obj, int depth = 10) where TProps : class, new();

        /// <summary>
        /// –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ EAV —Å —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ ID (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç config.DefaultCheckPermissionsOnLoad)
        /// </summary>
        Task<RedbObject<TProps>> LoadAsync<TProps>(long objectId, IRedbUser user, int depth = 10) where TProps : class, new();

        /// <summary>
        /// –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ EAV —Å —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç config.DefaultCheckPermissionsOnLoad)
        /// </summary>
        Task<RedbObject<TProps>> LoadAsync<TProps>(IRedbObject obj, IRedbUser user, int depth = 10) where TProps : class, new();

        /// <summary>
        /// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç –≤ EAV (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç _securityContext –∏ config.DefaultCheckPermissionsOnSave)
        /// </summary>
        Task<long> SaveAsync<TProps>(IRedbObject<TProps> obj) where TProps : class, new();
        
        /// <summary>
        /// –£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç _securityContext –∏ config.DefaultCheckPermissionsOnDelete)
        /// </summary>
        Task<bool> DeleteAsync<TProps>(IRedbObject<TProps> obj) where TProps : class, new();
        
        // ===== –ü–ï–†–ï–ì–†–£–ó–ö–ò –° –Ø–í–ù–´–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ú (–∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é) =====
        
       
        /// <summary>
        /// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç –≤ EAV —Å —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç config.DefaultCheckPermissionsOnSave)
        /// </summary>
        Task<long> SaveAsync<TProps>(IRedbObject<TProps> obj, IRedbUser user) where TProps : class, new();
        
        /// <summary>
        /// –£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç —Å —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç config.DefaultCheckPermissionsOnDelete)
        /// </summary>
        Task<bool> DeleteAsync<TProps>(IRedbObject<TProps> obj, IRedbUser user) where TProps : class, new();

        // ===== –ú–ê–°–°–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò (–ë–ï–ó –ü–†–û–í–ï–†–ö–ò –ü–†–ê–í) =====
        
        /// <summary>
        /// üöÄ –ú–ê–°–°–û–í–ê–Ø –í–°–¢–ê–í–ö–ê: –°–æ–∑–¥–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∑–∞ –æ–¥–Ω—É –æ–ø–µ—Ä–∞—Ü–∏—é (–ù–ï –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞)
        /// - –°–æ–∑–¥–∞–µ—Ç —Å—Ö–µ–º—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ SaveAsync)
        /// - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç ID –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤ —Å id == 0 —á–µ—Ä–µ–∑ GetNextKey
        /// - –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, –º–∞—Å—Å–∏–≤—ã, Class –ø–æ–ª—è
        /// - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç BulkInsert –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        /// - –ï—Å–ª–∏ id != 0 –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞ –æ—à–∏–±–∫–∏ –ë–î –¥–ª—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ (–Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞—Ä–∞–Ω–µ–µ)
        /// </summary>
        Task<List<long>> AddNewObjectsAsync<TProps>(List<IRedbObject<TProps>> objects) where TProps : class, new();
        
        /// <summary>
        /// üöÄ –ú–ê–°–°–û–í–ê–Ø –í–°–¢–ê–í–ö–ê —Å —è–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: –°–æ–∑–¥–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ (–ù–ï –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞)
        /// - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç OwnerId –∏ WhoChangeId –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –æ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        /// - –û—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–¥–µ–Ω—Ç–∏—á–Ω–∞ AddNewObjectsAsync –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        /// </summary>
        Task<List<long>> AddNewObjectsAsync<TProps>(List<IRedbObject<TProps>> objects, IRedbUser user) where TProps : class, new();
    }
}
