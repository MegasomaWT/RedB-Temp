using Microsoft.Extensions.Logging;
using redb.Core;
using redb.Core.DBModels;
using redb.Core.Models.Contracts;
using redb.Core.Models.Entities;
using redb.Core.Models.Security;

namespace redb.ConsoleTest.TestStages
{
    /// <summary>
    /// –≠—Ç–∞–ø 24: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    /// –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—É—é —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∏ Ambient Context
    /// </summary>
    public class Stage24_AdvancedSecurityContext : BaseTestStage
    {
        public override int Order => 24;
        public override string Name => "–ü–†–û–î–í–ò–ù–£–¢–´–ô –ö–û–ù–¢–ï–ö–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò";
        public override string Description => "–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∏ Ambient Context";

        protected override async Task ExecuteStageAsync(ILogger logger, IRedbService redb)
        {
            logger.LogInformation("üîç === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–î–í–ò–ù–£–¢–û–ì–û –ö–û–ù–¢–ï–ö–°–¢–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ===");

            // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—É—é —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
            logger.LogInformation("\nüéØ 1. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ù–û–ì–û–£–†–û–í–ù–ï–í–û–ô –°–ò–°–¢–ï–ú–´ –ü–†–ò–û–†–ò–¢–ï–¢–û–í:");
            
            var testUser = new RedbUser(new _RUser
            {
                Id = 12345,
                Login = "testuser",
                Name = "Test User",
                Email = "testuser@test.com",
                Password = "",
                Enabled = true,
                DateRegister = DateTime.Now
            });
            
            var context = RedbSecurityContext.WithUser(testUser);

            // –£—Ä–æ–≤–µ–Ω—å 1: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            var result1 = context.GetEffectiveUser();
            logger.LogInformation($"‚úÖ –£—Ä–æ–≤–µ–Ω—å 1 (Context with User): {result1.Login} (ID: {result1.Id})");
            
            // –£—Ä–æ–≤–µ–Ω—å 2: –°–∏—Å—Ç–µ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
            var systemContext = RedbSecurityContext.System();
            var result2 = systemContext.GetEffectiveUser();
            logger.LogInformation($"‚úÖ –£—Ä–æ–≤–µ–Ω—å 2 (System): {result2.Login} (ID: {result2.Id})");
            
            // –£—Ä–æ–≤–µ–Ω—å 3: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å admin –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º  
            var adminContext = RedbSecurityContext.WithAdmin();
            var result3 = adminContext.GetEffectiveUser();
            logger.LogInformation($"‚úÖ –£—Ä–æ–≤–µ–Ω—å 3 (Admin): {result3.Login} (ID: {result3.Id})");
            
            // –£—Ä–æ–≤–µ–Ω—å 4: –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
            var emptyContext = new RedbSecurityContext();
            var result4 = emptyContext.GetEffectiveUser();
            logger.LogInformation($"‚úÖ –£—Ä–æ–≤–µ–Ω—å 4 (Default): {result4.Login} (ID: {result4.Id})");

            // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º Ambient Context
            logger.LogInformation("\nüåê 2. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AMBIENT CONTEXT:");
            
            logger.LogInformation($"üìã –î–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Ambient Context:");
            logger.LogInformation($"  - Current: {AmbientSecurityContext.Current?.CurrentUser?.Name ?? "NULL"}");
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ambient context
            using (AmbientSecurityContext.SetContext(context))
            {
                logger.LogInformation($"üìã –í Ambient Context:");
                logger.LogInformation($"  - Current: {AmbientSecurityContext.Current?.CurrentUser?.Name}");
                logger.LogInformation($"  - EffectiveUserId: {AmbientSecurityContext.Current?.GetEffectiveUserId()}");
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
                using (AmbientSecurityContext.CreateSystemContext())
                {
                    logger.LogInformation($"üìã –í –≤–ª–æ–∂–µ–Ω–Ω–æ–º System Context:");
                    logger.LogInformation($"  - IsSystemContext: {AmbientSecurityContext.Current?.IsSystemContext}");
                    logger.LogInformation($"  - EffectiveUserId: {AmbientSecurityContext.Current?.GetEffectiveUserId()}");
                }
                
                logger.LogInformation($"üìã –ü–æ—Å–ª–µ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:");
                logger.LogInformation($"  - Current: {AmbientSecurityContext.Current?.CurrentUser?.Name}");
            }
            
            logger.LogInformation($"üìã –ü–æ—Å–ª–µ Ambient Context:");
            logger.LogInformation($"  - Current: {AmbientSecurityContext.Current?.CurrentUser?.Name ?? "NULL"}");

            // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º GetOrCreateDefault
            logger.LogInformation("\nüîß 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï GET OR CREATE DEFAULT:");
            
            var defaultContext = AmbientSecurityContext.GetOrCreateDefault();
            logger.LogInformation($"‚úÖ Default context —Å–æ–∑–¥–∞–Ω:");
            logger.LogInformation($"  - User: {defaultContext.CurrentUser?.Name}");
            logger.LogInformation($"  - UserId: {defaultContext.GetEffectiveUserId()}");
            logger.LogInformation($"  - IsAuthenticated: {defaultContext.IsAuthenticated}");

            // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤
            logger.LogInformation("\n‚è±Ô∏è 4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–†–ï–ú–ï–ù–ù–´–• –ö–û–ù–¢–ï–ö–°–¢–û–í:");
            
            logger.LogInformation("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º CreateUserContext:");
            using (AmbientSecurityContext.CreateUserContext(testUser))
            {
                var current = AmbientSecurityContext.Current;
                logger.LogInformation($"  - User: {current?.CurrentUser?.Name}");
                logger.LogInformation($"  - IsAuthenticated: {current?.IsAuthenticated}");
            }
            
            logger.LogInformation("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º CreateAdminContext:");
            using (AmbientSecurityContext.CreateAdminContext())
            {
                var current = AmbientSecurityContext.Current;
                logger.LogInformation($"  - User: {current?.CurrentUser?.Name}");
                logger.LogInformation($"  - UserId: {current?.GetEffectiveUserId()}");
            }

            // 5. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
            logger.LogInformation("\nüéØ 5. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:");
            
            logger.LogInformation("‚úÖ –ü—Ä–∏–º–µ—Ä—ã –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∫–æ–¥–∞:");
            logger.LogInformation("  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞");
            logger.LogInformation("  using (AmbientSecurityContext.CreateUserContext(currentUser))");
            logger.LogInformation("  {");
            logger.LogInformation("      // –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç currentUser");
            logger.LogInformation("      await redb.SaveAsync(project);");
            logger.LogInformation("      await redb.DeleteAsync(oldData);");
            logger.LogInformation("  }");
            logger.LogInformation("");
            logger.LogInformation("  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏");
            logger.LogInformation("  using (AmbientSecurityContext.CreateSystemContext())");
            logger.LogInformation("  {");
            logger.LogInformation("      // –û–ø–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤");
            logger.LogInformation("      await redb.SaveAsync(systemData);");
            logger.LogInformation("  }");

            // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö
            logger.LogInformation("\nüîÄ 6. –°–õ–û–ñ–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò –ü–†–ò–û–†–ò–¢–ï–¢–û–í:");
            
            using (AmbientSecurityContext.CreateUserContext(testUser))
            {
                var ambientContext = AmbientSecurityContext.Current!;
                
                // Explicit –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç ambient
                var explicitResult = ((RedbSecurityContext)ambientContext).GetEffectiveUser();
                logger.LogInformation($"üìã Explicit –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç Ambient: {explicitResult}");
                
                // –°–∏—Å—Ç–µ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                using (ambientContext.CreateSystemContext())
                {
                    var currentContext = AmbientSecurityContext.Current;
                    var systemResult = ((RedbSecurityContext)currentContext!).GetEffectiveUser();
                    logger.LogInformation($"üìã System –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç User: {systemResult}");
                }
            }

            logger.LogInformation("\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ü–†–û–î–í–ò–ù–£–¢–û–ì–û –ö–û–ù–¢–ï–ö–°–¢–ê:");
            logger.LogInformation("  ‚úÖ –ß–µ—Ç–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ - –Ω–µ—Ç –ø—É—Ç–∞–Ω–∏—Ü—ã");
            logger.LogInformation("  ‚úÖ Ambient Context - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–µ–∑–¥–µ");
            logger.LogInformation("  ‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã - –ª–µ–≥–∫–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è");
            logger.LogInformation("  ‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π —Ä–µ–∂–∏–º - –æ–ø–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤");
            logger.LogInformation("  ‚úÖ Fallback –∫ sys - —Å–∏—Å—Ç–µ–º–∞ –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç");
            logger.LogInformation("  ‚úÖ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏");

            logger.LogInformation("‚úÖ === –ü–†–û–î–í–ò–ù–£–¢–´–ô –ö–û–ù–¢–ï–ö–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û ===");
        }
    }
}
