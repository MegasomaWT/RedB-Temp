using Microsoft.Extensions.Logging;
using redb.Core;
using redb.Core.DBModels;
using redb.Core.Models;
using redb.Core.Models.Permissions;

namespace redb.ConsoleTest.TestStages
{
    /// <summary>
    /// –≠—Ç–∞–ø 23: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    /// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É PermissionFlags –∏ UserPermissionSet
    /// </summary>
    public class Stage23_PermissionModelsTest : BaseTestStage
    {
        public override int Order => 23;
        public override string Name => "–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–ï–õ–ï–ô –†–ê–ó–†–ï–®–ï–ù–ò–ô";
        public override string Description => "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã PermissionFlags –∏ UserPermissionSet";

        protected override async Task ExecuteStageAsync(ILogger logger, IRedbService redb)
        {
            logger.LogInformation("üîç === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–û–î–ï–õ–ï–ô –†–ê–ó–†–ï–®–ï–ù–ò–ô ===");

            // 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º PermissionFlags
            logger.LogInformation("\nüéØ 1. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PERMISSION FLAGS:");
            
            // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
            var readOnly = PermissionFlags.ReadOnly;
            var readWrite = PermissionFlags.ReadWrite;
            var allPermissions = PermissionFlags.All;
            var noPermissions = PermissionFlags.None;

            logger.LogInformation($"‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã:");
            logger.LogInformation($"  - ReadOnly: {readOnly.ToDisplayString()} ({readOnly})");
            logger.LogInformation($"  - ReadWrite: {readWrite.ToDisplayString()} ({readWrite})");
            logger.LogInformation($"  - All: {allPermissions.ToDisplayString()} ({allPermissions})");
            logger.LogInformation($"  - None: {noPermissions.ToDisplayString()} ({noPermissions})");

            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
            logger.LogInformation($"\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤:");
            logger.LogInformation($"  - ReadOnly.CanSelect(): {readOnly.CanSelect()}");
            logger.LogInformation($"  - ReadOnly.CanDelete(): {readOnly.CanDelete()}");
            logger.LogInformation($"  - All.CanUpdate(): {allPermissions.CanUpdate()}");
            logger.LogInformation($"  - None.CanInsert(): {noPermissions.CanInsert()}");

            // –°–æ–∑–¥–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏–∑ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–∫–∞–∫ –≤ –ë–î)
            var dbPermissions = PermissionFlagsExtensions.FromBooleans(true, true, true, false);
            logger.LogInformation($"  - FromBooleans(R=true, I=true, U=true, D=false): {dbPermissions.ToDisplayString()}");

            // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º UserPermissionSet
            logger.LogInformation("\nüë§ 2. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï USER PERMISSION SET:");
            
            var userPermissions = new UserPermissionSet
            {
                UserId = 12345
            };

            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
            userPermissions.SetGlobalPermissions(PermissionFlags.ReadOnly);
            userPermissions.AddSchemePermission(100, PermissionFlags.ReadWrite);
            userPermissions.AddObjectPermission(1021, PermissionFlags.All);

            logger.LogInformation($"‚úÖ UserPermissionSet —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {userPermissions.UserId}:");
            logger.LogInformation($"  - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞: {userPermissions.GlobalPermissions.ToDisplayString()}");
            logger.LogInformation($"  - –ü—Ä–∞–≤–∞ –Ω–∞ —Å—Ö–µ–º—É 100: {userPermissions.SchemePermissions[100].ToDisplayString()}");
            logger.LogInformation($"  - –ü—Ä–∞–≤–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç 1021: {userPermissions.ObjectPermissions[1021].ToDisplayString()}");

            // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–µ—Ä–∞—Ä—Ö–∏—é —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
            logger.LogInformation("\nüå≥ 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ï–†–ê–†–•–ò–ò –†–ê–ó–†–ï–®–ï–ù–ò–ô:");
            
            // –û–±—ä–µ–∫—Ç —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
            var perms1021 = userPermissions.GetPermissionsForObject(1021, 100);
            logger.LogInformation($"üìã –û–±—ä–µ–∫—Ç 1021 (–µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∞–≤–∞): {perms1021.ToDisplayString()}");
            
            // –û–±—ä–µ–∫—Ç –±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–∞–≤, –Ω–æ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —Å—Ö–µ–º—É
            var perms2000 = userPermissions.GetPermissionsForObject(2000, 100);
            logger.LogInformation($"üìã –û–±—ä–µ–∫—Ç 2000 (–ø—Ä–∞–≤–∞ –ø–æ —Å—Ö–µ–º–µ 100): {perms2000.ToDisplayString()}");
            
            // –û–±—ä–µ–∫—Ç –±–µ–∑ –ø—Ä–∞–≤, —Ç–æ–ª—å–∫–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ
            var perms3000 = userPermissions.GetPermissionsForObject(3000, 200);
            logger.LogInformation($"üìã –û–±—ä–µ–∫—Ç 3000 (—Ç–æ–ª—å–∫–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞): {perms3000.ToDisplayString()}");

            // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–ø–µ—Ä–∞—Ü–∏–π
            logger.LogInformation("\nüîß 4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –û–ü–ï–†–ê–¶–ò–ô:");
            
            var canRead1021 = userPermissions.CanPerformOperation(1021, 100, PermissionFlags.Select);
            var canDelete1021 = userPermissions.CanPerformOperation(1021, 100, PermissionFlags.Delete);
            var canUpdate2000 = userPermissions.CanPerformOperation(2000, 100, PermissionFlags.Update);
            var canDelete3000 = userPermissions.CanPerformOperation(3000, 200, PermissionFlags.Delete);

            logger.LogInformation($"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π:");
            logger.LogInformation($"  - –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –æ–±—ä–µ–∫—Ç 1021: {canRead1021}");
            logger.LogInformation($"  - –ú–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç 1021: {canDelete1021}");
            logger.LogInformation($"  - –ú–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –æ–±—ä–µ–∫—Ç 2000: {canUpdate2000}");
            logger.LogInformation($"  - –ú–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç 3000: {canDelete3000}");

            // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ
            logger.LogInformation("\n‚è±Ô∏è 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ï–®–ò–†–û–í–ê–ù–ò–Ø:");
            
            var stats = userPermissions.GetStatistics();
            logger.LogInformation($"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞:");
            logger.LogInformation($"  - {stats}");
            logger.LogInformation($"  - –ò—Å—Ç–µ–∫ –ª–∏ –∫–µ—à: {userPermissions.IsExpired}");
            
            // –ü—Ä–æ–¥–ª–µ–≤–∞–µ–º –∫–µ—à
            userPermissions.ExtendExpiration(TimeSpan.FromHours(1));
            logger.LogInformation($"  - –ü–æ—Å–ª–µ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏—Å—Ç–µ–∫–∞–µ—Ç: {userPermissions.ExpiresAt:HH:mm:ss}");
            
            // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–µ—à
            userPermissions.Invalidate();
            logger.LogInformation($"  - –ü–æ—Å–ª–µ –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫: {userPermissions.IsExpired}");

            // 6. –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
            logger.LogInformation("\nüéØ 6. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:");
            
            logger.LogInformation("‚úÖ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ:");
            logger.LogInformation("  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–µ—Ä–µ–¥ –æ–ø–µ—Ä–∞—Ü–∏–µ–π");
            logger.LogInformation("  if (userPerms.CanPerformOperation(objId, schemeId, PermissionFlags.Delete))");
            logger.LogInformation("  {");
            logger.LogInformation("      await redb.DeleteAsync(obj);");
            logger.LogInformation("  }");
            logger.LogInformation("");
            logger.LogInformation("  // –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π");
            logger.LogInformation("  var cached = permissionCache.GetUserPermissions(userId);");
            logger.LogInformation("  if (cached.IsExpired) cached = await LoadFromDatabase(userId);");

            logger.LogInformation("\nüí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ù–û–í–´–• –ú–û–î–ï–õ–ï–ô:");
            logger.LogInformation("  ‚úÖ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π");
            logger.LogInformation("  ‚úÖ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∏–µ—Ä–∞—Ä—Ö–∏–µ–π");
            logger.LogInformation("  ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º –∂–∏–∑–Ω–∏ –∫–µ—à–∞");
            logger.LogInformation("  ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–µ—à–∞");
            logger.LogInformation("  ‚úÖ –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö");

            logger.LogInformation("‚úÖ === –ú–û–î–ï–õ–ò –†–ê–ó–†–ï–®–ï–ù–ò–ô –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û ===");
        }
    }
}
