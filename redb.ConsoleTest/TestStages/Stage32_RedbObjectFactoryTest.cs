using System;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using redb.Core;
using redb.Core.Models.Entities;
using redb.Core.Models;
using redb.Core.Providers;
using redb.ConsoleTest.TestStages;
using redb.ConsoleTest;
using System.Linq;

namespace redb.ConsoleTest.TestStages
{
    /// <summary>
    /// –≠–¢–ê–ü 32: –¢–µ—Å—Ç RedbObjectFactory - –Ω–æ–≤–∞—è —Ñ–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
    /// –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å –Ω–æ–≤—ã–º —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É
    /// </summary>
    public class Stage32_RedbObjectFactoryTest : BaseTestStage
    {
        public override string Name => "üè≠ –¢–µ—Å—Ç RedbObjectFactory";
        public override string Description => "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Ñ–∞–±—Ä–∏–∫—É —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö";
        public override int Order => 32;

        protected override async Task ExecuteStageAsync(ILogger logger, IRedbService redb)
        {
            logger.LogInformation("üè≠ === –¢–ï–°–¢ REDBOBJECTFACTORY ===");
            logger.LogInformation("–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è —Å –Ω–æ–≤–æ–π —Ñ–∞–±—Ä–∏–∫–æ–π");

            // === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –§–ê–ë–†–ò–ö–ò ===
            logger.LogInformation("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º RedbObjectFactory...");
            try
            {
                // RedbService —Å–∞–º —Ä–µ–∞–ª–∏–∑—É–µ—Ç ISchemeSyncProvider, –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é
                var schemeSyncProvider = redb as ISchemeSyncProvider;
                if (schemeSyncProvider != null)
                {
                    RedbObjectFactory.Initialize(schemeSyncProvider);
                    logger.LogInformation("‚úÖ RedbObjectFactory —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!");
                    
                    var settings = RedbObjectFactory.GetSettings();
                    logger.LogInformation($"üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–±—Ä–∏–∫–∏: Initialized={settings.IsInitialized}, User={settings.CurrentUserName} (ID:{settings.CurrentUserId})");
                }
                else
                {
                    logger.LogWarning("‚ö†Ô∏è RedbService –Ω–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç ISchemeSyncProvider - CreateAsync –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");
                }
            }
            catch (Exception ex)
            {
                logger.LogWarning($"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–∞–±—Ä–∏–∫–∏: {ex.Message}");
            }
            logger.LogInformation("");

            // === –¢–ï–°–¢ 1: –°–¢–ê–†–´–ô –°–ü–û–°–û–ë –°–û–ó–î–ê–ù–ò–Ø (–∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ) ===
            logger.LogInformation("üìä –¢–ï–°–¢ 1: –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –°–¢–ê–†–´–ú —Å–ø–æ—Å–æ–±–æ–º");
            
            var oldWayObject = new RedbObject<AnalyticsMetricsProps>
            {
                name = "–°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è",
                note = "–†—É—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π",
                owner_id = 0,  // –í—Ä—É—á–Ω—É—é —É–∫–∞–∑—ã–≤–∞–µ–º
                who_change_id = 0,  // –í—Ä—É—á–Ω—É—é —É–∫–∞–∑—ã–≤–∞–µ–º
                date_create = DateTime.Now,  // –í—Ä—É—á–Ω—É—é —É–∫–∞–∑—ã–≤–∞–µ–º
                date_modify = DateTime.Now,  // –í—Ä—É—á–Ω—É—é —É–∫–∞–∑—ã–≤–∞–µ–º
                properties = new AnalyticsMetricsProps
                {
                    AdvertId = 1001,
                    Base = 100
                }
            };

            logger.LogInformation("   ‚úÖ –°—Ç–∞—Ä—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω: {Name}", oldWayObject.name);
            logger.LogInformation("   üìÖ date_create: {DateCreate}", oldWayObject.date_create);
            logger.LogInformation("   üë§ owner_id: {OwnerId}", oldWayObject.owner_id);

            // === –¢–ï–°–¢ 2: –ù–û–í–´–ô –°–ü–û–°–û–ë –ß–ï–†–ï–ó –§–ê–ë–†–ò–ö–£ (–ë–´–°–¢–†–û–ï –°–û–ó–î–ê–ù–ò–ï) ===
            logger.LogInformation("üè≠ –¢–ï–°–¢ 2: –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ RedbObjectFactory (–±—ã—Å—Ç—Ä–æ–µ)");

            try
            {
                var factoryObject = RedbObjectFactory.CreateFast<AnalyticsMetricsProps>(
                    properties: new AnalyticsMetricsProps
                    {
                        AdvertId = 2002,
                        Base = 200
                    }
                );

                // –ü—Ä–∏–≤–æ–¥–∏–º –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ç–∏–ø—É –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
                var concreteFactoryObject = (RedbObject<AnalyticsMetricsProps>)factoryObject;
                
                // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—ä–µ–∫—Ç–∞
                concreteFactoryObject.name = "–û–±—ä–µ–∫—Ç –∏–∑ —Ñ–∞–±—Ä–∏–∫–∏";
                concreteFactoryObject.note = "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É";

                logger.LogInformation("   ‚úÖ –û–±—ä–µ–∫—Ç –∏–∑ —Ñ–∞–±—Ä–∏–∫–∏ —Å–æ–∑–¥–∞–Ω: {Name}", concreteFactoryObject.name);
                logger.LogInformation("   üìÖ date_create: {DateCreate}", concreteFactoryObject.date_create);
                logger.LogInformation("   üë§ owner_id: {OwnerId} (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ AmbientSecurityContext)", concreteFactoryObject.owner_id);
                logger.LogInformation("   üîß who_change_id: {WhoChangeId} (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)", concreteFactoryObject.who_change_id);
                logger.LogInformation("   üìä Properties.AdvertId: {AdvertId}", factoryObject.properties.AdvertId);

                SetStageData("FactoryObject", concreteFactoryObject);
            }
            catch (Exception ex)
            {
                logger.LogWarning("‚ö†Ô∏è –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: {Error}", ex.Message);
                logger.LogInformation("   ‚ÑπÔ∏è –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
            }

            // === –¢–ï–°–¢ 3: –°–û–ó–î–ê–ù–ò–ï –° –ü–û–õ–ù–û–ô –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ï–ô ===
            logger.LogInformation("‚ö° –¢–ï–°–¢ 3: –°–æ–∑–¥–∞–Ω–∏–µ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–∏—Å–∫–æ–º —Å—Ö–µ–º—ã");

            try
            {
                if (RedbObjectFactory.IsInitialized)
                {
                    var fullObject = await RedbObjectFactory.CreateAsync<AnalyticsRecordProps>(
                        properties: new AnalyticsRecordProps
                        {
                            Article = "–ü–æ–ª–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è",
                            Stock = 42,
                            Date = DateTime.Now,
                            stringArr = new[] { "test1", "test2" },
                            longArr = new long[] { 1, 2, 3 }
                        }
                    );

                    // –ü—Ä–∏–≤–æ–¥–∏–º –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ç–∏–ø—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º
                    var concreteObject = (RedbObject<AnalyticsRecordProps>)fullObject;
                    concreteObject.name = "–û–±—ä–µ–∫—Ç —Å –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π";
                    concreteObject.note = "–°–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ CreateAsync —Å –ø–æ–∏—Å–∫–æ–º —Å—Ö–µ–º—ã";

                    logger.LogInformation("   ‚úÖ –û–±—ä–µ–∫—Ç —Å –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π —Å–æ–∑–¥–∞–Ω: {Name}", concreteObject.name);
                    logger.LogInformation("   üìã scheme_id: {SchemeId} (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ–Ω)", concreteObject.scheme_id);
                    logger.LogInformation("   üìä Properties.Article: {Article}", concreteObject.properties.Article);
                }
                else
                {
                    logger.LogInformation("   ‚ÑπÔ∏è –§–∞–±—Ä–∏–∫–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç CreateAsync");
                }
            }
            catch (Exception ex)
            {
                logger.LogWarning("‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: {Error}", ex.Message);
            }

            // === –¢–ï–°–¢ 4: –°–†–ê–í–ù–ï–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò ===
            logger.LogInformation("‚è±Ô∏è –¢–ï–°–¢ 4: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏");

            var startTime = DateTime.Now;
            
            // –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± - 100 –æ–±—ä–µ–∫—Ç–æ–≤
            var oldWayObjects = new RedbObject<AnalyticsMetricsProps>[100];
            for (int i = 0; i < 100; i++)
            {
                oldWayObjects[i] = new RedbObject<AnalyticsMetricsProps>
                {
                    name = $"–û–±—ä–µ–∫—Ç {i}",
                    owner_id = 0,
                    who_change_id = 0,
                    date_create = DateTime.Now,
                    date_modify = DateTime.Now,
                    properties = new AnalyticsMetricsProps { AdvertId = i, Base = i * 10 }
                };
            }
            var oldWayTime = DateTime.Now - startTime;

            startTime = DateTime.Now;
            
            // –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± - 100 –æ–±—ä–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É
            var factoryObjects = new RedbObject<AnalyticsMetricsProps>[100];
            for (int i = 0; i < 100; i++)
            {
                var factoryObj = RedbObjectFactory.CreateFast<AnalyticsMetricsProps>(
                    properties: new AnalyticsMetricsProps { AdvertId = i + 1000, Base = (i + 1000) * 10 }
                );
                factoryObjects[i] = (RedbObject<AnalyticsMetricsProps>)factoryObj;
                factoryObjects[i].name = $"–§–∞–±—Ä–∏—á–Ω—ã–π –æ–±—ä–µ–∫—Ç {i}";
            }
            var factoryTime = DateTime.Now - startTime;

            logger.LogInformation("   üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è 100 –æ–±—ä–µ–∫—Ç–æ–≤:");
            logger.LogInformation("     üî∏ –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±: {OldTime:F2} –º—Å", oldWayTime.TotalMilliseconds);
            logger.LogInformation("     üè≠ –ß–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫—É: {FactoryTime:F2} –º—Å", factoryTime.TotalMilliseconds);
            
            if (factoryTime < oldWayTime)
            {
                logger.LogInformation("   üöÄ –§–∞–±—Ä–∏–∫–∞ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞ {Diff:F2} –º—Å!", (oldWayTime - factoryTime).TotalMilliseconds);
            }
            else
            {
                logger.LogInformation("   ‚è±Ô∏è –§–∞–±—Ä–∏–∫–∞ –º–µ–¥–ª–µ–Ω–Ω–µ–µ –Ω–∞ {Diff:F2} –º—Å (–Ω–æ –¥–∞–µ—Ç –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π)", (factoryTime - oldWayTime).TotalMilliseconds);
            }

            // === –¢–ï–°–¢ 5: –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –¢–ò–ü–û–ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ===
            logger.LogInformation("üîí –¢–ï–°–¢ 5: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏");

            try
            {
                var typeSafeObject = RedbObjectFactory.CreateFast<AnalyticsMetricsProps>(
                    properties: new AnalyticsMetricsProps { AdvertId = 5000, Base = 500 }
                );

                logger.LogInformation("   ‚úÖ –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω");
                logger.LogInformation("   üìä –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ Properties.AdvertId: {AdvertId}", typeSafeObject.properties.AdvertId);
                logger.LogInformation("   üìä –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ Properties.Base: {Base}", typeSafeObject.properties.Base);
                logger.LogInformation("   üîß ID –æ–±—ä–µ–∫—Ç–∞: {Id}", typeSafeObject.Id);
                
                // –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–æ–≤—ã–º –ø–æ–ª—è–º –Ω—É–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ç–∏–ø—É
                var concreteTypeSafeObject = (RedbObject<AnalyticsMetricsProps>)typeSafeObject;
                logger.LogInformation("   üîß date_create: {DateCreate}", concreteTypeSafeObject.date_create);
            }
            catch (Exception ex)
            {
                logger.LogWarning("‚ö†Ô∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {Error}", ex.Message);
            }

            // === –í–´–í–û–î–´ ===
            logger.LogInformation("");
            logger.LogInformation("üìã === –í–´–í–û–î–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –§–ê–ë–†–ò–ö–ò ===");
            logger.LogInformation("‚úÖ –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±: –†–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏");
            logger.LogInformation("üè≠ –ù–æ–≤–∞—è —Ñ–∞–±—Ä–∏–∫–∞: –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤:");
            logger.LogInformation("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç owner_id –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏");
            logger.LogInformation("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç who_change_id");
            logger.LogInformation("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç scheme_id –ø–æ —Ç–∏–ø—É (–≤ CreateAsync)");
            logger.LogInformation("   ‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è");
            logger.LogInformation("   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –±—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑ —Å—Ö–µ–º—ã (CreateFast)");
            logger.LogInformation("   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å —Å–∏—Å—Ç–µ–º–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏");
            logger.LogInformation("   ‚Ä¢ –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ IRedbObject<TProps>");
            
            logger.LogInformation("üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ RedbObjectFactory –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤!");
            logger.LogInformation("   üí° CreateFast() - –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–ª—É—á–∞–µ–≤ –±–µ–∑ —Å—Ö–µ–º—ã");
            logger.LogInformation("   üí° CreateAsync() - –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ —Å—Ö–µ–º–æ–π");
            logger.LogInformation("   üí° CreateChildAsync() - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤");
        }
    }
}